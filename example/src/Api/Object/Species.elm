-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Api.Object.Species exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Api.Object
import Api.Interface
import Api.Union
import Api.Scalar
import Api.InputObject
import Api.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)

{-| The name of this species.
-}
name : SelectionSet (Maybe String) Api.Object.Species
name =
      Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| The classification of this species, such as "mammal" or "reptile".
-}
classification : SelectionSet (Maybe String) Api.Object.Species
classification =
      Object.selectionForField "(Maybe String)" "classification" [] (Decode.string |> Decode.nullable)


{-| The designation of this species, such as "sentient".
-}
designation : SelectionSet (Maybe String) Api.Object.Species
designation =
      Object.selectionForField "(Maybe String)" "designation" [] (Decode.string |> Decode.nullable)


{-| The average height of this species in centimeters.
-}
averageHeight : SelectionSet (Maybe Float) Api.Object.Species
averageHeight =
      Object.selectionForField "(Maybe Float)" "averageHeight" [] (Decode.float |> Decode.nullable)


{-| The average lifespan of this species in years, null if unknown.
-}
averageLifespan : SelectionSet (Maybe Int) Api.Object.Species
averageLifespan =
      Object.selectionForField "(Maybe Int)" "averageLifespan" [] (Decode.int |> Decode.nullable)


{-| Common eye colors for this species, null if this species does not typically
have eyes.
-}
eyeColors : SelectionSet (Maybe (List (Maybe String))) Api.Object.Species
eyeColors =
      Object.selectionForField "(Maybe (List (Maybe String)))" "eyeColors" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| Common hair colors for this species, null if this species does not typically
have hair.
-}
hairColors : SelectionSet (Maybe (List (Maybe String))) Api.Object.Species
hairColors =
      Object.selectionForField "(Maybe (List (Maybe String)))" "hairColors" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| Common skin colors for this species, null if this species does not typically
have skin.
-}
skinColors : SelectionSet (Maybe (List (Maybe String))) Api.Object.Species
skinColors =
      Object.selectionForField "(Maybe (List (Maybe String)))" "skinColors" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| The language commonly spoken by this species.
-}
language : SelectionSet (Maybe String) Api.Object.Species
language =
      Object.selectionForField "(Maybe String)" "language" [] (Decode.string |> Decode.nullable)


{-| A planet that this species originates from.
-}
homeworld : SelectionSet decodesTo Api.Object.Planet
 -> SelectionSet (Maybe decodesTo) Api.Object.Species
homeworld object____ =
      Object.selectionForCompositeField "homeworld" [] (object____) (Basics.identity >> Decode.nullable)


type alias PersonConnectionOptionalArguments = { after : OptionalArgument String
 , first : OptionalArgument Int
 , before : OptionalArgument String
 , last : OptionalArgument Int }

personConnection : (PersonConnectionOptionalArguments -> PersonConnectionOptionalArguments)
 -> SelectionSet decodesTo Api.Object.SpeciesPeopleConnection
 -> SelectionSet (Maybe decodesTo) Api.Object.Species
personConnection fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, first = Absent, before = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "last" filledInOptionals____.last (Encode.int) ]
                |> List.filterMap Basics.identity
    in
      Object.selectionForCompositeField "personConnection" optionalArgs____ (object____) (Basics.identity >> Decode.nullable)


type alias FilmConnectionOptionalArguments = { after : OptionalArgument String
 , first : OptionalArgument Int
 , before : OptionalArgument String
 , last : OptionalArgument Int }

filmConnection : (FilmConnectionOptionalArguments -> FilmConnectionOptionalArguments)
 -> SelectionSet decodesTo Api.Object.SpeciesFilmsConnection
 -> SelectionSet (Maybe decodesTo) Api.Object.Species
filmConnection fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, first = Absent, before = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "last" filledInOptionals____.last (Encode.int) ]
                |> List.filterMap Basics.identity
    in
      Object.selectionForCompositeField "filmConnection" optionalArgs____ (object____) (Basics.identity >> Decode.nullable)


{-| The ISO 8601 date format of the time that this resource was created.
-}
created : SelectionSet (Maybe String) Api.Object.Species
created =
      Object.selectionForField "(Maybe String)" "created" [] (Decode.string |> Decode.nullable)


{-| The ISO 8601 date format of the time that this resource was edited.
-}
edited : SelectionSet (Maybe String) Api.Object.Species
edited =
      Object.selectionForField "(Maybe String)" "edited" [] (Decode.string |> Decode.nullable)


{-| The ID of an object
-}
id : SelectionSet Api.ScalarCodecs.Id Api.Object.Species
id =
      Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)
