-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Api.Interface.Node exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Api.Object
import Api.Interface
import Api.Union
import Api.Scalar
import Api.InputObject
import Api.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)


type alias Fragments decodesTo =
    {
    onFilm : SelectionSet decodesTo Api.Object.Film,
 onSpecies : SelectionSet decodesTo Api.Object.Species,
 onPlanet : SelectionSet decodesTo Api.Object.Planet,
 onPerson : SelectionSet decodesTo Api.Object.Person,
 onStarship : SelectionSet decodesTo Api.Object.Starship,
 onVehicle : SelectionSet decodesTo Api.Object.Vehicle
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
      Fragments decodesTo
      -> SelectionSet decodesTo Api.Interface.Node
fragments selections____ =
    Object.exhaustiveFragmentSelection
        [
         Object.buildFragment "Film" selections____.onFilm,
 Object.buildFragment "Species" selections____.onSpecies,
 Object.buildFragment "Planet" selections____.onPlanet,
 Object.buildFragment "Person" selections____.onPerson,
 Object.buildFragment "Starship" selections____.onStarship,
 Object.buildFragment "Vehicle" selections____.onVehicle
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    {
      onFilm = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing),
 onSpecies = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing),
 onPlanet = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing),
 onPerson = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing),
 onStarship = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing),
 onVehicle = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
{-| The id of the object.
-}
id : SelectionSet Api.ScalarCodecs.Id Api.Interface.Node
id =
      Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)
