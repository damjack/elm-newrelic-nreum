[{"name":"NewRelic.AdditionalData","comment":"\n\n\n## Configuration\n\n@docs AdditionalData, DataValue\n\n\n## Configuration Methods\n\n@docs setBool, setFloat, setInt, setString\n\n\n## Encoding\n\n@docs encode\n\n","unions":[{"name":"AdditionalData","comment":" AdditionalData type\n","args":[],"cases":[]},{"name":"DataValue","comment":" DataValue type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"encode","comment":" Convert AdditionalData to JSON\n","type":"NewRelic.AdditionalData.AdditionalData -> ( String.String, Json.Encode.Value )"},{"name":"setBool","comment":" Build additional data with Bool value\n","type":"String.String -> Basics.Bool -> NewRelic.AdditionalData.AdditionalData"},{"name":"setFloat","comment":" Build additional data with Float value\n","type":"String.String -> Basics.Float -> NewRelic.AdditionalData.AdditionalData"},{"name":"setInt","comment":" Build additional data with Int value\n","type":"String.String -> Basics.Int -> NewRelic.AdditionalData.AdditionalData"},{"name":"setString","comment":" Build additional data with String value\n","type":"String.String -> String.String -> NewRelic.AdditionalData.AdditionalData"}],"binops":[]},{"name":"NewRelic.NREUM.AddPageAction","comment":" Reports a browser AddPageAction event to New Relic One along with a name and optional attributes.\nThis API call sends a browser AddPageAction event with your user-defined name and optional attributes to dashboards, along with several default attributes.\nThis is useful to track any event that is not already tracked automatically by the browser agent, such as clicking a Subscribe button or accessing a tutorial.\n\n\n## Configuration\n\n@docs AddPageAction\n\n\n## Configuration Methods\n\n@docs init\n\n\n## Overlay Configuration\n\n@docs addAdditionalData\n\n\n## Encoding\n\n@docs encode\n\n","unions":[{"name":"AddPageAction","comment":" AddPageAction type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"addAdditionalData","comment":" Add custom JSON data attributes to Nreum AddPageAction\n","type":"NewRelic.AdditionalData.AdditionalData -> NewRelic.NREUM.AddPageAction.AddPageAction -> NewRelic.NREUM.AddPageAction.AddPageAction"},{"name":"encode","comment":" Convert Nreum AddPageAction to JSON\n","type":"NewRelic.NREUM.AddPageAction.AddPageAction -> Json.Encode.Value"},{"name":"init","comment":" Build Nreum AddPageAction with specific action name\n","type":"String.String -> NewRelic.NREUM.AddPageAction.AddPageAction"}],"binops":[]},{"name":"NewRelic.NREUM.AddRelease","comment":" Adds a unique name and ID to identify releases with multiple JavaScript bundles on the same page.\nIn browser monitoring, a release is a way to tag errors with information about what version of your application is currently running.\nThis is useful for sites where shared components are owned by different teams, or multiple applications are deployed independently but run on the same page.\n\n\n## Configuration\n\n@docs AddRelease\n\n\n## Configuration Methods\n\n@docs init\n\n\n## Encoding\n\n@docs encode\n\n","unions":[{"name":"AddRelease","comment":" AddRelease type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"encode","comment":" Convert Nreum AddRelease to JSON\n","type":"NewRelic.NREUM.AddRelease.AddRelease -> Json.Encode.Value"},{"name":"init","comment":" Build Nreum AddRelease with releaseName and realeaseVersion\n","type":"String.String -> String.String -> NewRelic.NREUM.AddRelease.AddRelease"}],"binops":[]},{"name":"NewRelic.NREUM.Interaction","comment":" Returns a new API object that is bound to the current SPA interaction.\nThis method returns an API object that is bound to a specific BrowserInteraction event.\nEach time this method is called for the same BrowserInteraction, a new object is created, but it still references the same interaction.\n\n\n## Configuration\n\n@docs Interaction\n\n\n## Configuration Methods\n\n@docs init\n\n\n## Overlay Configuration\n\n@docs addMessage, addAdditionalData\n\n\n## Encoding\n\n@docs encode\n\n","unions":[{"name":"Interaction","comment":" Interaction type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"addAdditionalData","comment":" Add custom attribute to Nreum Interaction\n","type":"NewRelic.AdditionalData.AdditionalData -> NewRelic.NREUM.Interaction.Interaction -> NewRelic.NREUM.Interaction.Interaction"},{"name":"addMessage","comment":" Add sets the text value of the HTML element that was clicked to Nreum Interaction\n","type":"String.String -> NewRelic.NREUM.Interaction.Interaction -> NewRelic.NREUM.Interaction.Interaction"},{"name":"encode","comment":" Convert Nreum NoticeError to JSON\n","type":"NewRelic.NREUM.Interaction.Interaction -> Json.Encode.Value"},{"name":"init","comment":" Build Nreum NoticeError with specific action name\n","type":"String.String -> NewRelic.NREUM.Interaction.Interaction"}],"binops":[]},{"name":"NewRelic.NREUM.NoticeError","comment":" Identifies a browser error without disrupting your app's operations.\nUse this call to notice or log your app's handled or other miscellaneous errors.\nThis is useful when you have caught and handled an error, but you still want to identify it without disrupting your app's operation.\n\n\n## Configuration\n\n@docs NoticeError\n\n\n## Configuration Methods\n\n@docs init\n\n\n## Overlay Configuration\n\n@docs addAdditionalData\n\n\n## Helpers\n\n@docs toGraphQLResultError, toHttpError, toRemoteDataError\n\n\n## Encoding\n\n@docs encode\n\n","unions":[{"name":"NoticeError","comment":" NoticeError type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"addAdditionalData","comment":" Add custom attribute to Nreum NoticeError\n","type":"NewRelic.AdditionalData.AdditionalData -> NewRelic.NREUM.NoticeError.NoticeError -> NewRelic.NREUM.NoticeError.NoticeError"},{"name":"encode","comment":" Convert Nreum NoticeError to JSON\n","type":"NewRelic.NREUM.NoticeError.NoticeError -> Json.Encode.Value"},{"name":"init","comment":" Build Nreum NoticeError with specific action name\n","type":"String.String -> String.String -> NewRelic.NREUM.NoticeError.NoticeError"},{"name":"toGraphQLResultError","comment":" Convert Graphql.Http.Error result to String\n","type":"Graphql.Http.Error result -> String.String"},{"name":"toHttpError","comment":" Convert Http.Error to String\n","type":"Http.Error -> String.String"},{"name":"toRemoteDataError","comment":" Convert RemoteData for Graphql to String\n","type":"RemoteData.RemoteData (Graphql.Http.Error response) response -> String.String"}],"binops":[]},{"name":"NewRelic.NREUM.RouteName","comment":" Gives SPA routes more accurate names than default names. Monitors specific routes rather than by default grouping.\nThis method names the current route. This can be useful to:\n\n  - Give routes more accurate names than they would have by default.\n  - Monitor a route that might otherwise be grouped with other routes by default.\n\n\n## Configuration\n\n@docs RouteName\n\n\n## Configuration Methods\n\n@docs init\n\n\n## Encoding\n\n@docs encode\n\n","unions":[{"name":"RouteName","comment":" RouteName type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"encode","comment":" Convert Nreum RouteName to JSON\n","type":"NewRelic.NREUM.RouteName.RouteName -> Json.Encode.Value"},{"name":"init","comment":" Build Nreum RouteName with specific route page name\n","type":"String.String -> NewRelic.NREUM.RouteName.RouteName"}],"binops":[]},{"name":"NewRelic.Nreum","comment":" You can use browser agent and SPA API to monitor virtually anything that executes inside the browser.\n\nSPA monitoring can help you:\n\n  - Create faster, more responsive, highly interactive apps.\n  - Monitor the throughput and performance that real users are experiencing.\n  - Troubleshoot and resolve problems within the context of the page load.\n  - Query and visualize the data to assist with business decisions.\n  - Bring better apps to the marketplace more quickly\n\n\n## Definition types\n\n@docs Nreum\n\n\n## Defining tracking\n\n@docs routeName, interaction, noticeError, addPageAction, addRelease\n\n\n## Publishing\n\n@docs publish\n\n","unions":[{"name":"Nreum","comment":" Nreum type\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"addPageAction","comment":" Add global release version\n\nExamples:\n\n    NewRelic.NREUM.AddRelease.init \"APP\" \"1.0.0\"\n        |> Nreum.addRelease\n        |> Nreum.publish\n\n","type":"NewRelic.NREUM.AddPageAction.AddPageAction -> NewRelic.Nreum.Nreum"},{"name":"addRelease","comment":" Add global release version\n\nExamples:\n\n    NewRelic.NREUM.AddRelease.init \"APP\" \"1.0.0\"\n        |> Nreum.addRelease\n        |> Nreum.publish\n\n","type":"NewRelic.NREUM.AddRelease.AddRelease -> NewRelic.Nreum.Nreum"},{"name":"interaction","comment":" Send to NewRelic a custom interaction with additional data filterable\n\nExamples:\n\n    NewRelic.NREUM.Interaction.init \"Custom Interaction\"\n        |> NewRelic.NREUM.Interaction.addMessage \"Somenthing to send to add major information about intearction\"\n        |> Nreum.interaction\n        |> Nreum.publish\n\n","type":"NewRelic.NREUM.Interaction.Interaction -> NewRelic.Nreum.Nreum"},{"name":"noticeError","comment":" Send to NewRelic a custom error message with additional data filterable\n\nExamples:\n\n    NewRelic.NREUM.NoticeError.toGraphQLResultError graphQLResultError\n        |> NewRelic.NREUM.NoticeError.init \"error @requestResult\"\n        |> Nreum.noticeError\n        |> Nreum.publish\n\n","type":"NewRelic.NREUM.NoticeError.NoticeError -> NewRelic.Nreum.Nreum"},{"name":"publish","comment":" Send a message to DataDog RUM\n","type":"(Json.Encode.Value -> Platform.Cmd.Cmd msg) -> NewRelic.Nreum.Nreum -> Platform.Cmd.Cmd msg"},{"name":"routeName","comment":" Send to NewRelic the current custom route name\n\nExamples:\n\n    NewRelic.NREUM.RouteName.init \"RouteName\"\n        |> Nreum.routeName\n        |> Nreum.publish\n\n","type":"NewRelic.NREUM.RouteName.RouteName -> NewRelic.Nreum.Nreum"}],"binops":[]}]